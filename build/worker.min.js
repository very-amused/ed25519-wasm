var e;let s;function r(e){return e instanceof Error?e.message:"string"==typeof e?e:"An unknown error has occured, and a message was unable to be parsed from this error"}!function(e){var s,r;e.seedLen=32,e.publicKeyLen=32,e.privateKeyLen=64,(s=e.Methods||(e.Methods={}))[s.LoadED25519=0]="LoadED25519",(r=e.ErrorCodes||(e.ErrorCodes={}))[r.Success=0]="Success",r[r.BadRequest=1]="BadRequest",r[r.UnsupportedBrowser=2]="UnsupportedBrowser",r[r.Unknown=3]="Unknown"}(e||(e={}));const o=(e,s=[])=>{self.postMessage(e,s)};onmessage=async function(t){switch(t.data.method){case e.Methods.LoadED25519:try{s=await async function(s="."){if("object"!=typeof WebAssembly)throw e.ErrorCodes.UnsupportedBrowser;let r;if("function"==typeof WebAssembly.instantiateStreaming)r=await WebAssembly.instantiateStreaming(fetch(s));else{const e=await fetch(s),o=await e.arrayBuffer();r=await WebAssembly.instantiate(o)}return r.instance.exports}()}catch(s){return void function(s){"number"==typeof s&&s in e.ErrorCodes?o({code:s}):o({code:e.ErrorCodes.Unknown,message:r(s)})}(s)}o({code:e.ErrorCodes.Success});break;default:o({code:e.ErrorCodes.BadRequest})}};
